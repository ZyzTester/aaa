{"version":3,"sources":["app/authProvider.js","assets/bee.svg","assets/folder.svg","app/Login.js","mui/Layout.js","app/lists/CalendarEventsList.js","app/lists/creators/CalendarEventsCreate.js","app/lists/creators/CalendarEventsEdit.js","app/lists/PhotoCalendarEventsList.js","app/lists/creators/PhotoCalendarEventsCreator.js","app/lists/VoiceNoteCalendarEvents.js","app/lists/creators/VoiceNoteCreator.js","app/lists/UsersList.js","app/lists/creators/UsersCreator.js","app/lists/ProductAddedCAlendarList.js","app/lists/creators/ProductAddedCalendarEditor.js","app/lists/ReminderCalendarList.js","app/lists/creators/ReminderCalendarCreator.js","app/lists/TextNoteCalendarList.js","app/lists/creators/TextNoteCalendarCreator.js","App.js","index.js"],"names":["authProvider","fetchUtils","fetchJson","login","email","password","request","Request","method","headers","Headers","body","JSON","stringify","fetch","then","response","status","Error","statusText","json","token","axios","get","res","data","roles","includes","localStorage","setItem","catch","err","checkError","error","removeItem","Promise","reject","resolve","checkAuth","getItem","logout","getIdentity","getPermissions","Login","variant","props","useState","setEmail","setPassword","useLogin","notify","useNotify","id","SimpleForm","toolbar","onSubmitCapture","e","preventDefault","src","beeLogo","alt","fill","width","TextInput","label","name","type","value","onChange","target","title","Notification","MyAppBar","AppBar","href","UserMenu","MyLayout","Layout","appBar","CalendarEventsList","useEffect","List","ReferenceField","source","reference","ChipField","DateField","EditButton","CalendarEventsCreate","Create","ReferenceInput","validate","required","SelectInput","optionText","DateInput","CalendarEventsEdit","Edit","mutationMode","PhotoCalendarEventsList","TextField","PhotoCalendarEventsCreator","PhotoCalendarEventsEditor","VoiceNoteCalendarEvents","VoiceNoteCreator","VoiceNoteEditor","StringToLabelObject","record","children","rest","cloneElement","UsersList","ArrayField","SingleFieldList","UsersCreator","SelectArrayInput","choices","UsersEditor","ProductAddedCAlendarList","ProductAddedCalendarEditor","ProductAddedCalendarCreator","ReminderCalendarList","ReminderCalendarCreator","ReminderCalendarEditor","TextNoteCalendarList","TextNoteCalendarCreator","TextNoteCalendarEditor","API_URL","httpClient","fetchHeaders","Authorization","window","dataProvide","hydraDataProvider","entrypoint","url","options","fetchHydra","apiDocumentationParser","parseHydraDocumentation","api","result","console","log","customRoutes","path","render","to","delete","resource","params","deleteMany","query","filter","ids","App","HydraAdmin","dataProvider","layout","loginPage","Resource","list","edit","create","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e9de468.chunk.js","sourcesContent":["import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { stringify } from \"query-string\";\nimport { fetchUtils } from \"react-admin\";\n\nconst apiUrl = 'https://beautify-mobile.pl/'\nconst httpClient = fetchUtils.fetchJson;\n\nconst authProvider = {\n    login: ({ email, password }) =>  {\n        const request = new Request('https://beautify-mobile.pl/authentication_token', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json', 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ email, password })\n        });\n        return fetch(request)\n        .then(response => {\n            if (response.status < 200 || response.status >= 300) {\n                throw new Error(response.statusText);\n            }\n            return response.json();\n        })\n        .then(({ token }) => {            \n            axios.get('https://beautify-mobile.pl/me?id=1', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            })\n            .then((res) => {\n                if (res.status < 200 || res.status >= 300)\n                    throw new Error(res.statusText);\n                \n                if(!res.data.roles.includes(\"ROLE_ADMIN\")){\n                    throw new Error(\"User is not permitted\");\n                }\n                localStorage.setItem('token', token);\n                localStorage.setItem('roles', JSON.stringify(res.data.roles))\n                \n            })\n            .catch(err => {\n                throw new Error(err);\n            })\n            \n        })\n        .catch(err => {\n            throw new Error(err);\n        })\n        },\n    checkError: (error) => { \n        if (401 === error.status || 403 === error.status) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('roles');\n    \n            return Promise.reject();\n          }\n        return Promise.resolve()\n     },\n    checkAuth: () => {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('roles');\n        return Promise.resolve();\n    },\n    getIdentity: () => { /* ... */ },\n    getPermissions: () => {\n        const roles = localStorage.getItem('roles');\n        return roles ? Promise.resolve(roles) : Promise.reject();\n    },\n\n};\n\nexport default authProvider;","export default __webpack_public_path__ + \"static/media/bee.042b6614.svg\";","export default __webpack_public_path__ + \"static/media/folder.853689e5.svg\";","import React, { useState } from 'react'\nimport { useLogin, useNotify, Notification, TextField, SimpleForm, TextInput, Button, SaveButton } from 'react-admin';\nimport folderIcon from './../assets/folder.svg'\nimport beeLogo from './../assets/bee.svg'\nconst Folder = () => {\n    return(\n        <img src={folderIcon} alt='table' fill='white' id='svg' width='20' />\n    )\n}\n\nexport default function Login({variant, ...props}) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const login = useLogin();\n    const notify = useNotify();\n    const submit = e => {\n        e.preventDefault();\n        // will call authProvider.login({ email, password })\n        login({ email, password }).catch(() =>\n            notify('Invalid email or password')\n        );\n    };\n\n  return (\n    <div id='login' >\n       <div id='login-form' >\n               <SimpleForm toolbar={false} onSubmitCapture={submit} id='form' >\n               <section id='logo' >\n                <img src={beeLogo} alt='bee pretty' fill='black' id='svg' width='20' />\n                <p> Bee Pretty </p>\n               </section>\n                    <section id='inputs' >\n                        <TextInput {...props}\n                         id=\"outlined-basic\"\n                          label=\"Email\"\n                           variant=\"outlined\"\n                           name=\"email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)} />\n                         <br></br>\n                        <TextInput {...props}\n                         id=\"outlined-basic\"\n                          label=\"Password\"\n                           variant=\"outlined\"\n                           name=\"password\"\n                           type=\"password\"\n                           value={password}\n                           onChange={e => setPassword(e.target.value)} />\n               </section>\n               <button type='submit' title='submit' >ZALOGUJ</button>\n               </SimpleForm>\n                <Notification />\n       </div>\n    </div>\n  )\n}\n","// in src/MyLayout.js\nimport { Layout, AppBar, Menu, Sidebar, MenuItemLink, UserMenu } from 'react-admin';\nimport './../styles/layout.css'\nimport beeLogo from './../assets/bee.svg'\nimport folderIcon from './../assets/folder.svg'\n// import MySidebar from './MySidebar';\n// import MyMenu from './MyMenu';\n// import MyNotification from './MyNotification';\nimport authProvider from './../app/authProvider';\nimport Typography from '@material-ui/core/Typography';\nimport { forwardRef } from 'react';\n\nconst MyAppBar = (props) => {\n    return(\n        // <div id='appBar' >\n        //     <img src={beeLogo} alt='bee pretty' fill='black' id='svg' width='20' />\n        //     <p> Bee Pretty </p>\n        // </div>\n        <AppBar {...props} id='appBar' >\n            <a href='/' >\n            <img src={beeLogo} alt='bee pretty' fill='black' id='svg' width='20' />\n            <p> Bee Pretty </p>\n            </a>\n            <UserMenu id='user-menu' />\n        </AppBar>\n    )\n}\nconst MySidebar= (children) => {\n    return(\n        <Sidebar id='rest' >\n            <ConfigurationMenu/>\n        </Sidebar>\n    )\n}\nconst FolderIcon = () => {\n    return(\n        <img src={folderIcon} alt='table' fill='white' id='svg' width='20' />\n    )\n}\n\nconst ConfigurationMenu = forwardRef(({ onClick }, ref) => (\n    <MenuItemLink\n        ref={ref}\n        to=\"/configuration\"\n        primaryText=\"Configuration\"\n        leftIcon={<FolderIcon/>}\n        onClick={onClick} // close the menu on click\n    />\n));\n\nconst MyUserMenu = props => (\n    <UserMenu {...props} id='rest' >\n        <ConfigurationMenu />\n    </UserMenu>\n);\n\n\nconst MyLayout = props => <Layout \n    id='layout'\n    {...props}\n    appBar={MyAppBar}\n    // menu={MyUserMenu}\n    // sidebar={MySidebar}\n/>;\n\nexport default MyLayout;","import React, {useEffect} from 'react'\nimport { ChipField, Datagrid, DateField, EditButton, List, ReferenceField, TextField, useListContext } from 'react-admin'\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\nexport default function CalendarEventsList(props) {\n\n    useEffect(() => {\n    }, [])\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n            <ReferenceField label=\"Owner\" source='id' reference='users' >\n                <ChipField source='owner' />\n            </ReferenceField>\n            <DateField source='createdAt' />\n            <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, ReferenceInput, SimpleForm, required, SelectInput, DateInput, Edit } from 'react-admin'\n\nexport function CalendarEventsCreate(props) {\n  return (\n    <Create {...props} >\n        <SimpleForm>\n            <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n            <DateInput source='createdAt' validate={[required()]} />\n        </SimpleForm>\n    </Create>\n  )\n}\n\n\n  ","import { DateInput, Edit, ReferenceInput, ReferenceManyField, SelectInput, SimpleForm } from \"react-admin\";\n\nexport function CalendarEventsEdit (props) {\n    return (\n      <Edit title='Edycja CalendarEvents' {...props} mutationMode=\"pessimistic\" >\n          <SimpleForm>\n          <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n            {/* <ReferenceManyField label='Owner' target=\"id\" source=\"id\" reference='users'  >\n                <SelectInput source=\"owner\" />\n            </ReferenceManyField> */}\n            <DateInput label='Created at' source='createdAt' />\n          </SimpleForm>\n      </Edit>\n    )\n  }","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React from 'react'\nimport { ChipField, DateField, EditButton, List, ReferenceField, TextField } from 'react-admin'\n\nexport default function PhotoCalendarEventsList(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n          <TextField source='title' />\n          <DateField source='createdAt' />\n          <ReferenceField label=\"Owner\" source=\"id\" reference='users' >\n            <ChipField source='owner' />\n          </ReferenceField>\n          <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, DateInput, Edit, ReferenceInput, SimpleForm, TextInput, required, SelectInput } from 'react-admin'\n\nexport function PhotoCalendarEventsCreator(props) {\n  return (\n    <Create {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title' validate={[required()]} />\n            <DateInput label='Created at' source='createdAt' validate={[required()]} />\n            <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n  )\n}\nexport function PhotoCalendarEventsEditor(props) {\n    return (\n      <Edit {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title'  />\n            <DateInput label='Created at' source='createdAt' />\n            <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n      </Edit>\n    )\n  }\n","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React from 'react'\nimport { ChipField, DateField, EditButton, List, ReferenceField, TextField } from 'react-admin'\n\nexport default function VoiceNoteCalendarEvents(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n            <TextField source='title' />\n            <DateField source='createdAt' />\n            <ReferenceField label=\"Owner\" source=\"id\" reference='users' >\n                <ChipField source='owner' />\n            </ReferenceField>\n            <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, DateInput, Edit, ReferenceInput, required, SelectInput, SimpleForm, TextInput } from 'react-admin'\n\nexport function VoiceNoteCreator(props) {\n  return (\n    <Create {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title' validate={[required()]} />\n            <DateInput label='Created at' source='createdAt' validate={[required()]} />\n            <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n  )\n}\nexport function VoiceNoteEditor(props) {\n    return (\n      <Edit {...props} >\n<SimpleForm>\n            <TextInput label='Title' source='title'  />\n            <DateInput label='Created at' source='createdAt' />\n            <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n      </Edit>\n    )\n  }\n\n","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React, { cloneElement } from 'react'\nimport { ArrayField, ChipField, DeleteButton, EditButton, List, SingleFieldList, TextField } from 'react-admin'\n\nexport const StringToLabelObject = ({ record, children, ...rest }) =>\n  cloneElement(children, {\n    record: { label: record },\n    ...rest,\n  })\n\nexport default function UsersList(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n            <TextField source='name' />\n            <TextField source=\"displayedName\" />\n            <TextField source='email'/>\n            <ArrayField source=\"roles\">\n                <SingleFieldList>\n                    <StringToLabelObject>\n                    <ChipField source=\"label\"/>\n                    </StringToLabelObject>\n                </SingleFieldList>\n            </ArrayField>\n            <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { ArrayInput, Create, Edit, required, SelectArrayInput, SimpleForm, SimpleFormIterator, TextInput } from 'react-admin'\n\nexport function UsersCreator(props) {\n  return (\n    <Create {...props} >\n        <SimpleForm>\n        <TextInput label='Name' source='name' validate={[required()]}/>\n        <TextInput label='Displayed Name' source='displayedName' validate={[required()]} />\n        <TextInput label='Email' source='email' validate={[required()]}/>\n        <SelectArrayInput label='Roles' \n            source='roles' validate={[required()]}\n            choices={[\n                { id: 'ROLES_ADMIN', name: 'Admin' },\n                { id: 'ROLES_USER', name: 'User' }\n            ]}/>\n        </SimpleForm>\n    </Create>\n  )\n}\n\n\nexport function UsersEditor(props) {\n    return (\n      <Edit {...props} >\n          <SimpleForm>\n            <TextInput label='Name' source='name' />\n            <TextInput label='Displayed Name' source='displayedName' />\n            <TextInput label='Email' source='email' />\n            <SelectArrayInput label='Roles' \n                source='roles' validate={[required()]}\n                choices={[\n                    { id: 'ROLES_ADMIN', name: 'Admin' },\n                    { id: 'ROLES_USER', name: 'User' }\n                ]}/>\n          </SimpleForm>\n      </Edit>\n    )\n  }\n  ","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React from 'react'\nimport { ChipField, DateField, EditButton, List, ReferenceField, TextField } from 'react-admin'\n\nexport default function ProductAddedCAlendarList(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n          <TextField source='title' />\n          <DateField source='createdAt' />\n          <ReferenceField label=\"Owner\" source=\"id\" reference='users' >\n            <ChipField source='owner' />\n          </ReferenceField>\n          <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, DateInput, Edit, ReferenceInput, required, SelectInput, SimpleForm, TextInput } from 'react-admin'\n\nexport function ProductAddedCalendarEditor(props) {\n  return (\n<Edit {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title'  />\n            <DateInput label='Created at' source='createdAt' />\n            <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n      </Edit>\n  )\n}\n\nexport function ProductAddedCalendarCreator(props) {\n    return (\n        <Create {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title' validate={[required()]} />\n            <DateInput label='Created at' source='createdAt' validate={[required()]} />\n            <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n    )\n  }\n","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React from 'react'\nimport { ChipField, DateField, EditButton, List, ReferenceField, TextField } from 'react-admin'\n\nexport default function ReminderCalendarList(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n          <TextField source='title' />\n          <DateField source='createdAt' />\n          <ReferenceField label=\"Owner\" source=\"id\" reference='users' >\n            <ChipField source='owner' />\n          </ReferenceField>\n          <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, DateInput, Edit, ReferenceInput, required, SelectInput, SimpleForm, TextInput } from 'react-admin'\n\nexport function ReminderCalendarCreator(props) {\n  return (\n    <Create {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title' validate={[required()]} />\n            <DateInput label='Created at' source='createdAt' validate={[required()]} />\n            <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n  )\n}\nexport function ReminderCalendarEditor(props) {\n    return (\n        <Edit {...props} >\n        <SimpleForm>\n            <TextInput label='Title' source='title'  />\n            <DateInput label='Created at' source='createdAt' />\n            <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id' />\n            </ReferenceInput>\n        </SimpleForm>\n      </Edit>\n    )\n  }\n\n","import CustomizableDatagrid from 'ra-customizable-datagrid/lib/CustomizableDatagrid'\nimport React from 'react'\nimport { ChipField, DateField, EditButton, List, ReferenceField, TextField } from 'react-admin'\n\nexport default function TextNoteCalendarList(props) {\n  return (\n    <List {...props} >\n        <CustomizableDatagrid>\n          <TextField source='content' />\n          <DateField source='createdAt' />\n          <ReferenceField label=\"Owner\" source=\"id\" reference='users' >\n            <ChipField source='owner' />\n          </ReferenceField>\n          <EditButton/>\n        </CustomizableDatagrid>\n    </List>\n  )\n}\n","import React from 'react'\nimport { Create, DateInput, Edit, ReferenceInput, required, SelectInput, SimpleForm, TextInput } from 'react-admin'\n\nexport function TextNoteCalendarCreator(props) {\n  return (\n    <Create {...props} >\n    <SimpleForm>\n        <TextInput label='Content' source='content' validate={[required()]} />\n        <DateInput label='Created at' source='createdAt' validate={[required()]} />\n        <ReferenceInput label='Owner' source='owner' reference='users' validate={[required()]} >\n            <SelectInput optionText='id' />\n        </ReferenceInput>\n    </SimpleForm>\n    </Create>\n  )\n}\n\nexport function TextNoteCalendarEditor(props) {\n  //you can add this method to dataProvider in order to modify sent to the API \n  //transform={data => ({...data, changeOwner: true})}\n    return (\n        <Edit {...props}  > \n        <SimpleForm>\n            <TextInput label='Content' source='content'  />\n            <DateInput label='Created at' source='createdAt' />\n            <ReferenceInput label='Owner' source='owner' reference='users' >\n                <SelectInput optionText='id'  />\n            </ReferenceInput>\n        </SimpleForm>\n      </Edit>\n    )\n  }\n  ","import { fetchHydra, HydraAdmin,  hydraDataProvider,  ListGuesser } from '@api-platform/admin';\nimport React, { lazy, useEffect, useState } from 'react';\nimport {  Resource, EditGuesser, useGetIdentity, fetchUtils } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport authProvider from './app/authProvider';\nimport Login from './app/Login';\nimport MyLayout from './mui/Layout';\nimport { parseHydraDocumentation } from '@api-platform/api-doc-parser';\nimport CalendarEventsList from './app/lists/CalendarEventsList';\nimport { CalendarEventsCreate } from './app/lists/creators/CalendarEventsCreate';\nimport { CalendarEventsEdit } from './app/lists/creators/CalendarEventsEdit';\nimport PhotoCalendarEventsList from './app/lists/PhotoCalendarEventsList';\nimport { PhotoCalendarEventsCreator, PhotoCalendarEventsEditor } from './app/lists/creators/PhotoCalendarEventsCreator';\nimport VoiceNoteCalendarEvents from './app/lists/VoiceNoteCalendarEvents';\nimport { VoiceNoteCreator, VoiceNoteEditor } from './app/lists/creators/VoiceNoteCreator';\nimport UsersList from './app/lists/UsersList';\nimport { UsersCreator, UsersEditor } from './app/lists/creators/UsersCreator';\nimport ProductAddedCAlendarList from './app/lists/ProductAddedCAlendarList';\nimport { ProductAddedCalendarCreator, ProductAddedCalendarEditor } from './app/lists/creators/ProductAddedCalendarEditor';\nimport ReminderCalendarList from './app/lists/ReminderCalendarList';\nimport { ReminderCalendarCreator, ReminderCalendarEditor } from './app/lists/creators/ReminderCalendarCreator';\nimport TextNotCalendarList from './app/lists/TextNoteCalendarList';\nimport TextNoteCalendarList from './app/lists/TextNoteCalendarList';\nimport { TextNoteCalendarCreator, TextNoteCalendarEditor } from './app/lists/creators/TextNoteCalendarCreator';\n\nconst API_URL = \"https://beautify-mobile.pl\"\nconst httpClient = fetchUtils.fetchJson;\n\nconst fetchHeaders = {\n  Authorization: `Bearer ${window.localStorage.getItem('token')}`,\n//  Accept: \"application/Id+json\"\n};\n//fetching headers with bearer token\nconst fetchH = (url, options = {} ) =>\n  fetchHydra(url, {\n    ...options,\n    headers: new Headers(fetchHeaders),\n  });\n  \n  const apiDocumentationParser = (API_URL) =>\n    parseHydraDocumentation(API_URL, {\n      headers: new Headers(fetchHeaders),\n    }).then(\n      ({ api }) => ({ api }),\n      (result) => {\n        const { api, status } = result;\n\n        console.log(status)\n\n      if (status === 401) {\n        return Promise.resolve({\n          api,\n          status,\n          customRoutes: [\n            <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />,\n          ],\n        });\n      }\n\n      return Promise.reject(result);\n    },\n  );\n\nconst dataProvide = hydraDataProvider({\n  entrypoint: API_URL,\n  httpClient: fetchH,\n  apiDocumentationParser: apiDocumentationParser,\n  //this part was suppoused to respond to transform parameter (added to create or edit)\n  // create: (resource, params) => {\n  //   const { changeOwner, ...record } = params.data;\n  //   const headers = new Headers({\n  //       'Content-Type': 'application/json',\n  //   });\n  //   if (changeOwner) {\n  //     return httpClient(`${API_URL}/${resource}`, {\n  //       method: 'PATCH',\n  //       body: JSON.stringify(record),\n  //       headers,\n  //   }).then(({ json }) => ({\n  //       data: { ...record, id: json.id },\n  //   }));\n  //   }\n  //     return httpClient(`${API_URL}/${resource}`, {\n  //       method: 'POST',\n  //       body: JSON.stringify(record),\n  //       headers,\n  //   }).then(({ json }) => ({\n  //       data: { ...record, id: json.id },\n  //   }));\n  //},\n  delete: (resource, params) =>\n        httpClient(`${API_URL}/${resource}/${params.id}`, {\n            method: 'DELETE',\n        }).then(({ json }) => ({ data: json })),\n\n    deleteMany: (resource, params) => {\n        const query = {\n            filter: JSON.stringify({ id: params.ids}),\n        };\n        return httpClient(`${API_URL}/${resource}?${JSON.stringify(query)}`, {\n            method: 'DELETE',\n            body: JSON.stringify(params.data),\n        }).then(({ json }) => ({ data: json }));\n    },\n});\n\nfunction App() {\n\n  return (\n    <HydraAdmin dataProvider={dataProvide} layout={MyLayout} entrypoint={API_URL} authProvider={authProvider} loginPage={ Login }  >\n      <Resource name=\"users\" list={UsersList} edit={UsersEditor} create={UsersCreator} />\n      <Resource name=\"calendar_events\" list={CalendarEventsList} create={CalendarEventsCreate} edit={CalendarEventsEdit} />\n      <Resource name=\"photo_calendar_events\" list={PhotoCalendarEventsList} create={PhotoCalendarEventsCreator} edit={PhotoCalendarEventsEditor} />\n      <Resource name=\"voice_note_calendar_events\" list={VoiceNoteCalendarEvents} create={VoiceNoteCreator} edit={VoiceNoteEditor} />\n      <Resource name=\"product_added_calendar_events\" list={ProductAddedCAlendarList} edit={ProductAddedCalendarEditor} create={ProductAddedCalendarCreator} />\n      <Resource name=\"reminder_calendar_events\" list={ReminderCalendarList} edit={ReminderCalendarEditor} create={ReminderCalendarCreator} />\n      <Resource name=\"text_note_calendar_events\" list={TextNoteCalendarList} edit={TextNoteCalendarEditor} create={TextNoteCalendarCreator} />\n   </HydraAdmin>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './styles/style.css'\n\nReactDOM.render(\n      <BrowserRouter>\n        <App  />\n      </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}